<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Blog</title>
    <%- include('./partials/head') %>
        <link href="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.snow.css" rel="stylesheet">
        <style>
            /* Custom styles for responsiveness */
            @media (max-width: 576px) {
                h2 {
                    font-size: 1.5rem;
                }
            }

            .textarea {
                resize: none;
            }

            #editor-container {
                height: 300px;
            }
        </style>
</head>

<body>
    <%- include('./partials/navbar') %>
        <div class="container">
            <h2 class="text-center mt-2">Create Blog</h2>
            <form method="post" action="/blogs" enctype="multipart/form-data" id="blogForm">
                <div class="mb-3">
                    <label for="title" class="form-label">Title</label>
                    <input type="text" class="form-control font-italic" name="title" id="title"
                        placeholder="Write a title..." required />
                </div>
                <div class="mb-3">
                    <label for="body" class="form-label">Body</label>
                    <div id="editor-container"></div>
                    <input type="hidden" name="body" id="hiddenBody" required>
                </div>
                <div class="mb-3">
                    <label for="coverImage" class="form-label">Cover Picture</label>
                    <input type="file" class="form-control" name="coverImage" id="coverImage" />
                </div>
                <div class="d-flex gap-4 align-items-center">
                    <button type="button" class="btn btn-success d-none" id="paraphraseButton">Paraphrase</button>
                    <button type="button" class="btn btn-warning" id="generateButton">Generate Blog Content</button>
                    <button type="submit" class="btn btn-primary">Add</button>
                </div>
            </form>
        </div>
        <script src="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.js"></script>
        <%- include('./partials/script') %>

            <script>
                const quill = new Quill('#editor-container', {
                    theme: 'snow',
                    placeholder: 'Write your blog content here...',
                    modules: {
                        toolbar: [
                            ['bold', 'italic', 'underline', 'strike'],
                            [{ header: 1 }, { header: 2 }],
                            [{ list: 'ordered' }, { list: 'bullet' }],
                            [{ color: [] }, { background: [] }],
                            [{ align: [] }],
                            ['clean']
                        ]
                    }
                });

                const paraphraseButton = document.getElementById('paraphraseButton');
                const generateButton = document.getElementById('generateButton');
                const addButton = document.querySelector('button[type="submit"]');
                const hiddenBody = document.getElementById('hiddenBody');
                const blogForm = document.getElementById('blogForm');

                quill.on('text-change', function () {
                    if (quill.getText().trim().length > 0) {
                        paraphraseButton.classList.remove('d-none');
                    } else {
                        paraphraseButton.classList.add('d-none');
                    }
                });

                paraphraseButton.addEventListener('click', async function () {
                    const content = quill.getText().trim();
                    console.log("Content to paraphrase:", content); // Log the content to be sent
                    if (content) {
                        // Disable buttons
                        generateButton.disabled = true;
                        paraphraseButton.disabled = true;
                        addButton.disabled = true;

                        try {
                            const res = await fetch('http://localhost:3000/utils/paraphrase', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ content: content })
                            });

                            if (!res.ok) {
                                throw new Error('Network response was not ok');
                            }

                            const data = await res.json();
                            console.log("Response from server:", data); // Log the response from the server

                            if (data.paraphrasedText) {
                                quill.setText(data.paraphrasedText);
                            } else {
                                alert('Failed to paraphrase content');
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            alert('Failed to paraphrase content');
                        } finally {
                            // Re-enable buttons
                            generateButton.disabled = false;
                            paraphraseButton.disabled = false;
                            addButton.disabled = false;
                        }
                    }
                });

                generateButton.addEventListener('click', async function () {
                    const topic = prompt("Enter the topic you want to write a blog about:");
                    if (topic) {
                        console.log("Topic to generate blog:", topic); // Log the topic to be sent

                        // Disable buttons
                        generateButton.disabled = true;
                        paraphraseButton.disabled = true;
                        addButton.disabled = true;

                        try {
                            const res = await fetch('http://localhost:3000/utils/generate', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ content: topic })
                            });

                            if (!res.ok) {
                                throw new Error('Network response was not ok');
                            }

                            const data = await res.json();
                            console.log("Response from server:", data); // Log the response from the server

                            if (data.generatedText) {
                                quill.setText(data.generatedText);
                            } else {
                                alert('Failed to generate blog content');
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            alert('Failed to generate blog content');
                        } finally {
                            // Re-enable buttons
                            generateButton.disabled = false;
                            paraphraseButton.disabled = false;
                            addButton.disabled = false;
                        }
                    }
                });

                blogForm.addEventListener('submit', function (e) {
                    hiddenBody.value = quill.root.innerHTML;
                });
            </script>
</body>

</html>